# ðŸ§ª AWS Development Environment Configuration
# Copy this to .env.local for local development

# ================================================
# AWS CORE CONFIGURATION (DEVELOPMENT)
# ================================================

# AWS Region
NEXT_PUBLIC_AWS_REGION=us-east-1
AWS_REGION=us-east-1

# AWS Credentials (Use IAM user for development)
AWS_ACCESS_KEY_ID=your_dev_aws_access_key
AWS_SECRET_ACCESS_KEY=your_dev_aws_secret_access_key

# ================================================
# DYNAMODB CONFIGURATION (DEV TABLES)
# ================================================

# DynamoDB Table Names (Development)
NEXT_PUBLIC_DYNAMODB_TEMPLATES_TABLE=PreWorkApp-Templates-dev
NEXT_PUBLIC_DYNAMODB_USERS_TABLE=PreWorkApp-Users-dev
NEXT_PUBLIC_DYNAMODB_INTEGRATIONS_TABLE=PreWorkApp-Integrations-dev
NEXT_PUBLIC_DYNAMODB_ANALYTICS_TABLE=PreWorkApp-Analytics-dev
NEXT_PUBLIC_DYNAMODB_WORKFLOWS_TABLE=PreWorkApp-Workflows-dev

# DynamoDB Local (Optional - for offline development)
DYNAMODB_ENDPOINT=http://localhost:8000
DYNAMODB_USE_LOCAL=false

# ================================================
# S3 CONFIGURATION (DEV BUCKETS)
# ================================================

# S3 Bucket Names (Development)
NEXT_PUBLIC_S3_BUCKET=preworkapp-storage-dev
NEXT_PUBLIC_S3_TEMPLATES_BUCKET=preworkapp-templates-dev
NEXT_PUBLIC_S3_MEDIA_BUCKET=preworkapp-media-dev

# ================================================
# COGNITO AUTHENTICATION (DEV)
# ================================================

# Cognito Development Configuration
NEXT_PUBLIC_COGNITO_USER_POOL_ID=us-east-1_DevPoolId
NEXT_PUBLIC_COGNITO_CLIENT_ID=dev_cognito_client_id
NEXT_PUBLIC_COGNITO_IDENTITY_POOL_ID=us-east-1:dev-identity-pool-id

# ================================================
# API GATEWAY & LAMBDA (DEV)
# ================================================

# API Gateway Development
NEXT_PUBLIC_API_GATEWAY_URL=https://dev-api-id.execute-api.us-east-1.amazonaws.com/dev
API_GATEWAY_STAGE=dev

# Lambda Function Names (Development)
LAMBDA_TEMPLATE_PROCESSOR=PreWorkApp-TemplateProcessor-dev
LAMBDA_ANALYTICS_PROCESSOR=PreWorkApp-AnalyticsProcessor-dev
LAMBDA_NOTIFICATION_HANDLER=PreWorkApp-NotificationHandler-dev

# ================================================
# REAL-TIME SYNC (DEV)
# ================================================

# WebSocket API Gateway for Development
NEXT_PUBLIC_WEBSOCKET_URL=wss://dev-websocket-id.execute-api.us-east-1.amazonaws.com/dev

# EventBridge Development
EVENTBRIDGE_BUS_NAME=PreWorkApp-EventBus-dev

# ================================================
# FEATURE FLAGS (DEVELOPMENT)
# ================================================

# Enable AWS Features for Development
NEXT_PUBLIC_ENABLE_AWS_FEATURES=true
NEXT_PUBLIC_ENABLE_REAL_TIME_SYNC=true
NEXT_PUBLIC_ENABLE_ADVANCED_ANALYTICS=true
NEXT_PUBLIC_ENABLE_AI_FEATURES=true
NEXT_PUBLIC_ENABLE_INTEGRATION_HUB=true

# Development-specific Features
ENABLE_MOCK_DATA=true
ENABLE_DEBUG_MODE=true
ENABLE_HOT_RELOAD=true

# ================================================
# DEVELOPMENT SETTINGS
# ================================================

# Environment Mode
NODE_ENV=development
NEXT_PUBLIC_APP_ENV=development

# Debug Settings
ENABLE_DEBUG_LOGGING=true
ENABLE_AWS_SDK_DEBUG=true
ENABLE_VERBOSE_LOGGING=true

# Development Server
DEV_SERVER_PORT=3000
DEV_SERVER_HOST=localhost

# ================================================
# MOCK/FALLBACK CONFIGURATION
# ================================================

# When AWS is not available, use mock data
USE_MOCK_AWS_SERVICES=true
MOCK_DELAY_MS=500
MOCK_ERROR_RATE=0.05

# Local Storage Fallback
USE_LOCAL_STORAGE_FALLBACK=true
LOCAL_STORAGE_PREFIX=preworkapp_dev_

# ================================================
# TESTING CONFIGURATION
# ================================================

# Test Database
TEST_DYNAMODB_ENDPOINT=http://localhost:8000
TEST_S3_ENDPOINT=http://localhost:9000

# Test User Credentials
TEST_USER_EMAIL=test@preworkapp.com
TEST_USER_PASSWORD=TestPassword123!

# ================================================
# SETUP INSTRUCTIONS
# ================================================

# 1. Copy this file to .env.local
# 2. Update AWS credentials with your development IAM user
# 3. Create development AWS resources:
#    npm run aws:setup-dev
# 4. Start local development:
#    npm run dev
# 5. Test AWS integration:
#    npm run test:aws

# ================================================
# QUICK START (NO AWS SETUP REQUIRED)
# ================================================

# To run without AWS (mock data only):
# 1. Copy this file to .env.local
# 2. Set USE_MOCK_AWS_SERVICES=true
# 3. Run: npm run dev
# 4. All AWS features will use mock data
