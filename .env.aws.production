# ðŸš€ AWS Environment Configuration for Pre-Work App
# Copy this to .env.local for development or configure in AWS Amplify Console for production

# ================================================
# AWS CORE CONFIGURATION
# ================================================

# AWS Region (Required)
NEXT_PUBLIC_AWS_REGION=us-east-1
AWS_REGION=us-east-1

# AWS Credentials (Required for DynamoDB/S3 access)
AWS_ACCESS_KEY_ID=your_aws_access_key_here
AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key_here

# ================================================
# DYNAMODB CONFIGURATION
# ================================================

# DynamoDB Table Names
NEXT_PUBLIC_DYNAMODB_TEMPLATES_TABLE=PreWorkApp-Templates-prod
NEXT_PUBLIC_DYNAMODB_USERS_TABLE=PreWorkApp-Users-prod
NEXT_PUBLIC_DYNAMODB_INTEGRATIONS_TABLE=PreWorkApp-Integrations-prod
NEXT_PUBLIC_DYNAMODB_ANALYTICS_TABLE=PreWorkApp-Analytics-prod
NEXT_PUBLIC_DYNAMODB_WORKFLOWS_TABLE=PreWorkApp-Workflows-prod

# DynamoDB Settings
DYNAMODB_ENDPOINT=https://dynamodb.us-east-1.amazonaws.com
DYNAMODB_MAX_RETRIES=3
DYNAMODB_TIMEOUT=5000

# ================================================
# S3 CONFIGURATION
# ================================================

# S3 Bucket Names
NEXT_PUBLIC_S3_BUCKET=preworkapp-storage-prod
NEXT_PUBLIC_S3_TEMPLATES_BUCKET=preworkapp-templates-prod
NEXT_PUBLIC_S3_MEDIA_BUCKET=preworkapp-media-prod

# S3 Settings
S3_ENDPOINT=https://s3.us-east-1.amazonaws.com
S3_MAX_FILE_SIZE=10485760
S3_ALLOWED_TYPES=image/jpeg,image/png,image/gif,application/pdf,text/plain

# ================================================
# COGNITO AUTHENTICATION
# ================================================

# Cognito User Pool Configuration
NEXT_PUBLIC_COGNITO_USER_POOL_ID=us-east-1_YourPoolId
NEXT_PUBLIC_COGNITO_CLIENT_ID=your_cognito_client_id
NEXT_PUBLIC_COGNITO_IDENTITY_POOL_ID=us-east-1:your-identity-pool-id

# Cognito Settings
COGNITO_REGION=us-east-1
COGNITO_DOMAIN=your-app-domain.auth.us-east-1.amazoncognito.com

# ================================================
# API GATEWAY & LAMBDA
# ================================================

# API Gateway Configuration
NEXT_PUBLIC_API_GATEWAY_URL=https://your-api-id.execute-api.us-east-1.amazonaws.com/prod
API_GATEWAY_STAGE=prod
API_GATEWAY_TIMEOUT=30000

# Lambda Function Names
LAMBDA_TEMPLATE_PROCESSOR=PreWorkApp-TemplateProcessor-prod
LAMBDA_ANALYTICS_PROCESSOR=PreWorkApp-AnalyticsProcessor-prod
LAMBDA_NOTIFICATION_HANDLER=PreWorkApp-NotificationHandler-prod

# ================================================
# REAL-TIME SYNC CONFIGURATION
# ================================================

# WebSocket API Gateway for Real-Time Features
NEXT_PUBLIC_WEBSOCKET_URL=wss://your-websocket-id.execute-api.us-east-1.amazonaws.com/prod
WEBSOCKET_CONNECTION_TIMEOUT=30000
WEBSOCKET_RETRY_ATTEMPTS=3

# EventBridge Configuration
EVENTBRIDGE_BUS_NAME=PreWorkApp-EventBus-prod
EVENTBRIDGE_RULE_PREFIX=PreWorkApp-

# ================================================
# FEATURE FLAGS
# ================================================

# Enable/Disable AWS Features
NEXT_PUBLIC_ENABLE_AWS_FEATURES=true
NEXT_PUBLIC_ENABLE_REAL_TIME_SYNC=true
NEXT_PUBLIC_ENABLE_ADVANCED_ANALYTICS=true
NEXT_PUBLIC_ENABLE_AI_FEATURES=true
NEXT_PUBLIC_ENABLE_INTEGRATION_HUB=true

# Enable/Disable Specific AWS Services
ENABLE_DYNAMODB=true
ENABLE_S3_STORAGE=true
ENABLE_COGNITO_AUTH=true
ENABLE_LAMBDA_FUNCTIONS=true
ENABLE_EVENTBRIDGE=true

# ================================================
# INTEGRATION SERVICES
# ================================================

# Third-Party Integration Keys (Optional)
SLACK_BOT_TOKEN=xoxb-your-slack-bot-token
MICROSOFT_GRAPH_CLIENT_ID=your-microsoft-graph-client-id
GOOGLE_WORKSPACE_CLIENT_ID=your-google-workspace-client-id
ZAPIER_WEBHOOK_URL=https://hooks.zapier.com/hooks/catch/your-webhook-id

# ================================================
# MONITORING & LOGGING
# ================================================

# CloudWatch Configuration
CLOUDWATCH_LOG_GROUP=/aws/lambda/PreWorkApp-prod
CLOUDWATCH_RETENTION_DAYS=30

# X-Ray Tracing
ENABLE_XRAY_TRACING=true
XRAY_SAMPLING_RATE=0.1

# ================================================
# PERFORMANCE & CACHING
# ================================================

# ElastiCache Configuration (Optional)
ELASTICACHE_ENDPOINT=your-elasticache-cluster.cache.amazonaws.com:6379
CACHE_TTL_SECONDS=3600

# CloudFront Distribution (Optional)
CLOUDFRONT_DOMAIN=your-cloudfront-domain.cloudfront.net

# ================================================
# DEVELOPMENT/PRODUCTION SETTINGS
# ================================================

# Environment Mode
NODE_ENV=production
NEXT_PUBLIC_APP_ENV=production

# Debug Settings
ENABLE_DEBUG_LOGGING=false
ENABLE_AWS_SDK_DEBUG=false

# Rate Limiting
API_RATE_LIMIT_PER_MINUTE=100
WEBSOCKET_RATE_LIMIT_PER_MINUTE=1000

# ================================================
# SECURITY SETTINGS
# ================================================

# CORS Configuration
CORS_ALLOWED_ORIGINS=https://your-domain.com,https://www.your-domain.com
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,PATCH

# JWT Configuration
JWT_SECRET=your-super-secret-jwt-key-here
JWT_EXPIRY=24h

# ================================================
# BACKUP & DISASTER RECOVERY
# ================================================

# Backup Configuration
BACKUP_S3_BUCKET=preworkapp-backups-prod
BACKUP_RETENTION_DAYS=90
ENABLE_AUTOMATED_BACKUPS=true

# ================================================
# USAGE NOTES
# ================================================

# 1. Replace all "your_*" values with actual AWS resource identifiers
# 2. For production, configure these in AWS Amplify Console Environment Variables
# 3. For development, copy this file to .env.local and update values
# 4. Never commit actual credentials to version control
# 5. Use IAM roles with minimal required permissions
# 6. Enable CloudTrail for audit logging

# ================================================
# QUICK SETUP COMMANDS
# ================================================

# To create AWS resources, run:
# npm run aws:setup-prod
# 
# To validate configuration:
# npm run aws:validate
#
# To test AWS connectivity:
# npm run aws:test-connection
